{
  "type": "record",
  "name": "JudgmentPackageAvailable",
  "namespace": "tna.tre.messages.judgment.available",
  "doc": "properties required for all messages routed through TRE",
  "fields": [
    {
      "name": "properties",
      "type": {
        "type": "record",
        "name": "Properties",
        "fields": [
          {
            "name": "messageType",
            "type": "string",
            "default": "tna.tre.messages.judgment.available.JudgmentPackageAvailable",
            "doc": "Message for a judgment package available event"
          },
          {
            "name": "timestampMillis",
            "type": "long"
          },
          {
            "name": "function",
            "type": "string",
            "default": "tre-tf-module-parse-judgment-available",
            "doc": "Judgment docx parsing"
          },
          {
            "name": "producer",
            "type": "string",
            "default": "TRE",
            "doc": "The message producer (e.g. TRE, TDR, etc). Could be used for filtering and redirecting messages"
          },
          {
            "name": "executionId",
            "type": "string",
            "doc": "This is an id that can be used to uniquely identify the execution of the function. Information, such as the inputs, may be obtainable using this id. For TRE the ID of the step function, not lambda functions called from the step function, as that is the one responsible for sending out the message"
          },
          {
            "name": "parentExecutionId",
            "type": [
              "string",
              "null"
            ],
            "doc": "the execution-id of from the input message"
          }
        ]
      }
    },
    {
      "name": "parameters",
      "type": {
        "type": "record",
        "name": "Parameters",
        "fields": [
          {
            "name": "reference",
            "type": "string",
            "description": "(TDR-2023-AAA|FCL-???????) # opaque string: use originator to know where it came from, should be an acceptable filename"
          },
          {
            "name": "originator",
            "type": {
              "type": "enum",
              "name": "Originator",
              "symbols": [
                "FCL",
                "TDR"
              ],
              "description": "who provided the docx FCL|TDR)"
            }
          },
          {
            "name": "bundleFileURI",
            "type": "string",
            "description": "download tar.gz"
          },
          {
            "name": "metadataFilePath",
            "type": "string",
            "description": "metadata file location in bundle tar.gz ",
            "default": "metadata.json"
          },
          {
            "name": "metadataFileType",
            "type": "string",
            "description": "type definition of the metadata file defined by a schema"
          }
        ]
      }
    }
  ]
}
