{
   "type":"record",
   "name":"TREEvent",
   "namespace": "tna.tre.messages",
   "doc": "properties required for all messages routed through TRE",
   "fields": [
    {
       "name": "messageType",
       "type": "string",
       "doc": "The type of message that will be namespace.name such as tna.tre.message.TREEvent"
    },
    {
       "name": "timestampMillis",
       "type": "long"
   },
   {
           "name": "function",
           "type": "string",
           "default": "tre-fn-dpsg-bag-to-dri-sip",
           "doc":  "The name of the function/process that created this message such as tre-fn-dpsg-bag-to-dri-sip"
    },
    {
      "name": "producer",
      "type": {
        "type": "enum",
        "name": "Producer",
        "symbols": [
          "TRE",
          "TDR",
          "DRI"
        ],
        "default": "TRE"
      },
         "default": "TRE",
         "doc": "The message producer (e.g. TRE, TDR, etc). Could be used for filtering and redirecting messages"
     },
     {
        "name": "executionId",
        "type": "string",
         "doc":  "This is an id that can be used to uniquely identify the execution of the function. Information, such as the inputs, may be obtainable using this id. For TRE the ID of the step function, not lambda functions called from the step function, as that is the one responsible for sending out the message"
     },
     {
        "name": "parentExecutionId",
        "type": ["string", "null"],
        "doc":  "the execution-id of from the input message"
     }

  ]
}